---
- name: Ensure repository for brave-browser is present
  ansible.builtin.get_url:
    url: https://brave-browser-rpm-release.s3.brave.com/brave-browser.repo
    dest: '/etc/yum.repos.d/brave-browser.repo'
    owner: root
    group: root
    mode: 0644
  become: true

- name: Ensure repository for Hashicorp is present
  ansible.builtin.get_url:
    url: https://rpm.releases.hashicorp.com/fedora/hashicorp.repo
    dest: '/etc/yum.repos.d/hashicorp.repo'
    owner: root
    group: root
    mode: 0644
  become: true

- name: Ensure repository for VScode is present
  ansible.builtin.get_url:
    url: https://packages.microsoft.com/yumrepos/vscode/config.repo
    dest: '/etc/yum.repos.d/vscode.repo'
    owner: root
    group: root
    mode: 0644
  become: true

- name: Ensure RPM Fusion GPG keys and repositories are present
  block:
    - name: Ensure GPG keys for RPM Fusion free and nonfree are present
      ansible.builtin.rpm_key:
        key: "{{ item }}"
        state: present
      loop:
        - "https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-free-fedora-2020"
        - "https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-nonfree-fedora-2020"

    - name: Ensure repository for RPM free is present
      ansible.builtin.dnf:
        name:
          - "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_facts['distribution_version'] }}.noarch.rpm"
          - "https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_facts['distribution_version'] }}.noarch.rpm"
        state: present
  become: true

- name: Ensure GPG key for brave-browser is present
  ansible.builtin.rpm_key:
    key: https://brave-browser-rpm-release.s3.brave.com/brave-core.asc
    state: present
  become: true

- name: Ensure rpm key for Visual Studio Code is present
  ansible.builtin.rpm_key:
    key: https://packages.microsoft.com/keys/microsoft.asc
    state: absent
  become: true

- name: Ensure base dnf packages are present
  ansible.builtin.package:
    name: "{{ base_packages }}"
    state: present
  become: true

- name: Ensure libvirt support for Vagrant is present
  ansible.builtin.package:
    name: "{{ vagrant_libvirt_packages }}"
    state: present
  become: true
  when: "'vagrant' | string in base_packages"

- name: Ensure docker engine is configured
  become: true
  when: install_docker
  block:
    - name: Ensure old docker packages are absent.
      ansible.builtin.package:
        name:
          - docker
          - docker-client
          - docker-client-latest
          - docker-common
          - docker-latest
          - docker-latest-logrotate
          - docker-logrotate
          - docker-selinux
          - docker-engine-selinux
          - docker-engine
        state: absent
      when: uninstall_old_docker

    - name: Ensure GPG key for docker is present.
      ansible.builtin.rpm_key:
        key: https://download.docker.com/linux/fedora/gpg
        state: present

    - name: Ensure repository for docker is present.
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/fedora/docker-ce.repo
        dest: '/etc/yum.repos.d/docker-ce.repo'
        owner: root
        group: root
        mode: 0644 

    - name: Ensure docker packages are present.
      ansible.builtin.package:
        name: "{{ docker_packages }}"
        state: present

    - name: Ensure docker deamon is started.
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: true

    - name: Ensure the current user is part of docker group.
      ansible.builtin.user:
        name: "{{ ansible_user|default(lookup('env','USER')) }}"
        groups: docker
        append: true
        state: present

- name: Install VSCode Extenions
  ansible.builtin.command: code --install-extension {{ item }}
  with_items: "{{ vscode_extensions }}"
  changed_when: false
